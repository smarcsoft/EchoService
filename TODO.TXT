1. Continous integration
Setup a continous build process on the build server - DONE
Check that a code commit leads to a new build and container - DONE
If a new image can be successfully build, push it to docker hub, and deploy it in the swarm cluster automatically - DONE

2. Replace docker swarm with kubernetes - DONE

3. Perform an update of the service in Kubernetes - DONE

4. Call a script
Create a shell script taking a number of seconds as an argument and doing an infinite loop until the number of seconds is reached. - DONE
The script should output the number of iterations executed. - DONE
Add a maximizecpu function in the echo service - DONE
maximizecpu should call the script and return the number of iterations to the client. - DONE

4. autoscaling
Using Azure Monitor, look at the script pod cpu. - DONE
Then use the autoscaling capability of kubernetes to create a new pod if cpu > 80%. - DONE

5. Service Mesh
Before i start, version is not working... I don't know why the system property cannot be read.
Investigate service mesh on Azure.
. Use linkerd for retry management (simulate a faulty service and monitor the retries)
. Make sure load balancing works across all pods
. Simulate a canary deployment with a faulty service.

